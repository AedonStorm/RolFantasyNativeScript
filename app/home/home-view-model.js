"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const observable_1 = require("data/observable");
const observable_array_1 = require("tns-core-modules/data/observable-array");
const observable_property_decorator_1 = require("../shared/observable-property-decorator");
const page_1 = require("tns-core-modules/ui/page/page");
const platform_1 = require("platform");
const enums_1 = require("tns-core-modules/ui/enums");
const AdventurePageController_1 = require("~/home/adventure-page/AdventurePageController");
const EncounterPageController_1 = require("~/home/encounter-page/EncounterPageController");
var PageState;
(function (PageState) {
    PageState[PageState["Home"] = 0] = "Home";
    PageState[PageState["Adventure"] = 1] = "Adventure";
    PageState[PageState["Encounter"] = 2] = "Encounter";
    PageState[PageState["Tabern"] = 3] = "Tabern";
})(PageState = exports.PageState || (exports.PageState = {}));
let bottomBarInteraction = true;
class HomeViewModel extends observable_1.Observable {
    constructor(page) {
        super();
        this.currentPageState = PageState.Home;
        this.activateButton = new page_1.Color(40, 255, 255, 255);
        this.pageWidth = 0;
        this.adventurePageController = null;
        this.encounterageController = null;
        this.page = page;
        this.pageWidth = platform_1.screen.mainScreen.widthDIPs;
        this.adventurePage = page.getViewById("adventure-page");
        this.encounterPage = page.getViewById("encounter-page");
        this.homeListItems = new observable_array_1.ObservableArray([1, 2, 3, 4, 5, 6, 7, 8, 9]);
    }
    switchPage(nextPageState) {
        if (nextPageState != this.currentPageState && bottomBarInteraction) {
            //console.log("Current State: " + this.currentPageState.toString())
            //console.log("Next State: " + nextPageState.toString())
            bottomBarInteraction = false;
            const currentPageId = PageState[this.currentPageState];
            const newPageId = PageState[nextPageState];
            this.page.getViewById("hightlightedBtn").col = nextPageState;
            switch (nextPageState) {
                case PageState.Home: {
                    this.pageAnimationOut(this.getCurrentView(), nextPageState);
                    this.currentPageState = nextPageState;
                    bottomBarInteraction = true;
                    break;
                }
                case PageState.Adventure: {
                    if (this.adventurePageController == null)
                        this.adventurePageController = new AdventurePageController_1.AdventurePageController(this.adventurePage);
                    this.pageAnimationIn(this.adventurePage, nextPageState);
                    break;
                }
                case PageState.Encounter: {
                    if (this.encounterageController == null)
                        this.encounterageController = new EncounterPageController_1.EncounterPageController(this.encounterPage, this.pageWidth);
                    this.pageAnimationIn(this.encounterPage, nextPageState);
                    break;
                }
                case PageState.Tabern: {
                    //statements 
                    break;
                }
                default: {
                    console.log("SwitchPage Error");
                    return;
                }
            }
        }
    }
    pageAnimationIn(pageAnim, nextPageState) {
        pageAnim.translateX = nextPageState > this.currentPageState ? this.pageWidth : -this.pageWidth;
        pageAnim.visibility = "visible";
        if (this.currentPageState != PageState.Home)
            this.pageAnimationOut(this.getCurrentView(), nextPageState);
        pageAnim.animate({ translate: { x: 0, y: 0 }, duration: 200, curve: enums_1.AnimationCurve.easeIn });
        this.currentPageState = nextPageState;
        bottomBarInteraction = true;
    }
    pageAnimationOut(pageAnim, nextPageState) {
        const finalPosition = nextPageState < this.currentPageState ? this.pageWidth : -this.pageWidth;
        pageAnim.animate({ translate: { x: finalPosition, y: 0 }, duration: 200, curve: enums_1.AnimationCurve.easeIn }).then(() => {
            pageAnim.visibility = "collapse";
        });
    }
    getCurrentView() {
        switch (this.currentPageState) {
            case PageState.Home: {
                break;
            }
            case PageState.Adventure: {
                return this.adventurePage;
            }
            case PageState.Encounter: {
                return this.encounterPage;
            }
            case PageState.Tabern: {
                //statements 
                break;
            }
            default: {
                console.log("getView Error");
                return;
            }
        }
    }
}
__decorate([
    observable_property_decorator_1.ObservableProperty(),
    __metadata("design:type", observable_array_1.ObservableArray)
], HomeViewModel.prototype, "homeListItems", void 0);
exports.HomeViewModel = HomeViewModel;
//# sourceMappingURL=data:application/json;base64,